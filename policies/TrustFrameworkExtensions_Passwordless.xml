<?xml version="1.0" encoding="utf-8" ?>
<TrustFrameworkPolicy 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
  xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06" 
  PolicySchemaVersion="0.3.0.0" 
  TenantId="{Settings:Tenant}" 
  PolicyId="B2C_1A_TrustFrameworkExtensions_Passwordless" 
  PublicPolicyUri="http://{Settings:Tenant}/B2C_1A_TrustFrameworkExtensions_Passwordless"
  DeploymentMode="Development">
  
  <BasePolicy>
    <TenantId>{Settings:Tenant}</TenantId>
    <PolicyId>B2C_1A_TrustFrameworkLocalization</PolicyId>
  </BasePolicy>

  <BuildingBlocks>

    <ClaimsSchema>

      <!-- AUTHSIGNAL CLAIMS START HERE -->

      <ClaimType Id="requestBody">
        <DisplayName>requestBody</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="bearerToken">
          <DisplayName>bearerToken</DisplayName>
          <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="actionCode">
        <DisplayName>actionCode</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="actionState">
        <DisplayName>actionState</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="isMatchingUserId">
        <DataType>boolean</DataType>
      </ClaimType>

      <ClaimType Id="isChallengeSuccessful">
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="authsignalUserId">
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="authsignalEnrolled">
        <DataType>boolean</DataType>
      </ClaimType>

      <ClaimType Id="errorMessage">
        <DisplayName></DisplayName>
        <DataType>string</DataType>
        <UserInputType>Paragraph</UserInputType>
      </ClaimType>

      <!-- AUTHSIGNAL CLAIMS END HERE -->

    </ClaimsSchema>

    <ClaimsTransformations>

      <!-- AUTHSIGNAL CLAIMS TRANSFORMATIONS START HERE -->

      <ClaimsTransformation Id="AuthsignalCreateInitAuthRequestBody" TransformationMethod="GenerateJson">
        <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" TransformationClaimType="userId" />
            <InputClaim ClaimTypeReferenceId="signInNames.emailAddress" TransformationClaimType="email" />
        </InputClaims>
        <InputParameters>
            <!-- NOTE: Change the action value here to the corresponding Authsignal action your user is performing. This may be signIn, signUp, manageSettings etc. -->
            <InputParameter Id="action" DataType="string" Value="signIn" />
            <InputParameter Id="forceEnrollment" DataType="boolean" Value="true" />
            <InputParameter Id="redirectToSettings" DataType="boolean" Value="false" />
        </InputParameters>
        <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="requestBody" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="AuthsignalCheckMatchingUserId" TransformationMethod="CompareClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="objectId" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="authsignalUserId" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="operator" DataType="string" Value="EQUAL" />
          <InputParameter Id="ignoreCase" DataType="string" Value="true" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="isMatchingUserId" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="AuthsignalCheckIsChallengeSuccessful" TransformationMethod="LookupValue">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="actionState" TransformationClaimType="inputParameterId" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="ALLOW" DataType="string" Value="true" />
          <InputParameter Id="CHALLENGE_SUCCEEDED" DataType="string" Value="true" />
          <InputParameter Id="CHALLENGE_FAILED" DataType="string" Value="false" />
          <InputParameter Id="BLOCK" DataType="string" Value="false" />
          <InputParameter Id="errorOnFailedLookup" DataType="boolean" Value="false" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="isChallengeSuccessful" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <!-- AUTHSIGNAL CLAIMS TRANSFORMATIONS END HERE -->

    </ClaimsTransformations>

  </BuildingBlocks>

  <ClaimsProviders>
    <ClaimsProvider>
      <DisplayName>Local Account SignIn</DisplayName>

      <TechnicalProfiles>

        <!-- PASSWORDLESS TECHNICAL PROFILES START HERE -->

        <TechnicalProfile Id="AAD-UserReadUsingEmailAddress_Passwordless">
          <Metadata>
            <Item Key="Operation">Read</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="signInName" PartnerClaimType="signInNames.emailAddress" Required="true" />
          </InputClaims>
          <OutputClaims>
            <!-- Required claims -->
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="localAccountAuthentication" />

            <!-- Optional claims -->
            <OutputClaim ClaimTypeReferenceId="userPrincipalName" />
            <OutputClaim ClaimTypeReferenceId="displayName" />
            <OutputClaim ClaimTypeReferenceId="otherMails" />
            <OutputClaim ClaimTypeReferenceId="signInNames.emailAddress" />
          </OutputClaims>
          <IncludeTechnicalProfile ReferenceId="AAD-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-LocalAccountSignin-Email_Passwordless">
          <DisplayName>Local Account Signin</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="SignUpTarget">SignUpWithLogonEmailExchange</Item>
            <Item Key="setting.operatingMode">Email</Item>
            <Item Key="ContentDefinitionReferenceId">api.localaccountsignin</Item>
            <Item Key="IncludeClaimResolvingInClaimsHandling">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="signInName" DefaultValue="{OIDC:LoginHint}" AlwaysUseDefaultValue="true" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="signInName" Required="true" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="AAD-UserReadUsingEmailAddress_Passwordless" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-AAD" />
        </TechnicalProfile>

        <TechnicalProfile Id="LocalAccountSignUpWithLogonEmail_Passwordless">
          <DisplayName>Email signup</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="ContentDefinitionReferenceId">api.localaccountsignup</Item>
            <Item Key="EnforceEmailVerification">false</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="email" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="email" PartnerClaimType="Verified.Email" Required="true" />
            <OutputClaim ClaimTypeReferenceId="executed-SelfAsserted-Input" DefaultValue="true" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" />
            <OutputClaim ClaimTypeReferenceId="newUser" />

            <!-- Optional claims, to be collected from the user -->
            <OutputClaim ClaimTypeReferenceId="displayName" />
            <OutputClaim ClaimTypeReferenceId="givenName" />
            <OutputClaim ClaimTypeReferenceId="surName" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="AAD-UserWriteUsingLogonEmail_Passwordless" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-AAD" />
        </TechnicalProfile>

        <TechnicalProfile Id="AAD-UserWriteUsingLogonEmail_Passwordless">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="signInNames.emailAddress" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <!-- Required claims -->
            <PersistedClaim ClaimTypeReferenceId="email" PartnerClaimType="signInNames.emailAddress" />

            <!-- Optional claims. -->
            <PersistedClaim ClaimTypeReferenceId="displayName" DefaultValue="unknown" />
            <PersistedClaim ClaimTypeReferenceId="givenName" />
            <PersistedClaim ClaimTypeReferenceId="surname" />
          </PersistedClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="newUser" PartnerClaimType="newClaimsPrincipalCreated" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="localAccountAuthentication" />
            <OutputClaim ClaimTypeReferenceId="userPrincipalName" />
            <OutputClaim ClaimTypeReferenceId="signInNames.emailAddress" />
          </OutputClaims>
          <IncludeTechnicalProfile ReferenceId="AAD-Common" />
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-AAD" />
        </TechnicalProfile>

        <!-- PASSWORDLESS TECHNICAL PROFILES END HERE -->


        <!-- AUTHSIGNAL TECHNICAL PROFILES START HERE -->

        <TechnicalProfile Id="AuthsignalConnectApiBase">
          <DisplayName>Authsignal Connect API Base</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
              <Item Key="SendClaimsIn">Body</Item>
              <Item Key="AuthenticationType">Basic</Item>
              <Item Key="AllowInsecureAuthInProduction">false</Item>
              <Item Key="ResolveJsonPathsInJsonTokens">true</Item>
              <Item Key="ClaimUsedForRequestPayload">requestBody</Item>
              <Item Key="DefaultUserMessageIfRequestFailed">Cannot process your request right now, please try again later.</Item>
          </Metadata>
          <CryptographicKeys>
              <Key Id="BasicAuthenticationUsername" StorageReferenceId="B2C_1A_AuthsignalSecret" />
              <Key Id="BasicAuthenticationPassword" StorageReferenceId="B2C_1A_AuthsignalSecret" />
          </CryptographicKeys>
          <InputClaims>
              <InputClaim ClaimTypeReferenceId="requestBody" />
          </InputClaims>
        </TechnicalProfile>

        <TechnicalProfile Id="AuthsignalOidcInitAuth">
           <DisplayName>Authsignal OIDC Init Auth API</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
          <!-- NOTE: Change the host name below -->
          <Metadata>
              <Item Key="ServiceUrl">{Settings:AuthsignalHostname}/init-auth</Item>
          </Metadata>
          <InputClaimsTransformations>
              <InputClaimsTransformation ReferenceId="AuthsignalCreateInitAuthRequestBody"/>
          </InputClaimsTransformations>
          <InputClaims>
              <InputClaim ClaimTypeReferenceId="requestBody"/>
          </InputClaims>
          <OutputClaims>
              <OutputClaim ClaimTypeReferenceId="bearerToken" PartnerClaimType="token"/>
          </OutputClaims>
          <IncludeTechnicalProfile ReferenceId="AuthsignalConnectApiBase"/>
        </TechnicalProfile>

        <TechnicalProfile Id="AuthsignalOidcAuth">
          <DisplayName>Authsignal OIDC Authorize API</DisplayName>
          <Protocol Name="OpenIdConnect" />
          <Metadata>
              <!-- NOTE: Change the host name and tenant id below -->
              <Item Key="METADATA">{Settings:AuthsignalHostname}/oidc/.well-known/openid-configuration</Item>
              <Item Key="client_id">{Settings:AuthsignalTenantId}</Item>
              <Item Key="authorization_endpoint">{Settings:AuthsignalHostname}/oidc/auth</Item>
              <Item Key="AccessTokenEndpoint">{Settings:AuthsignalHostname}/oidc/token</Item>
              <Item Key="response_types">code</Item>
              <Item Key="scope">openid</Item>
              <Item Key="HttpBinding">POST</Item>
              <Item Key="response_mode">form_post</Item>
              <Item Key="token_endpoint_auth_method">client_secret_post</Item>
              <Item Key="UsePolicyInRedirectUri">false</Item>
              <Item Key="IncludeClaimResolvingInClaimsHandling">true</Item>
              <Item Key="ResolveJsonPathsInJsonTokens">true</Item>
          </Metadata>
          <CryptographicKeys>
              <Key Id="client_secret" StorageReferenceId="B2C_1A_AuthsignalSecret" />
          </CryptographicKeys>
          <InputClaims>
              <InputClaim ClaimTypeReferenceId="bearerToken" PartnerClaimType="token" />
          </InputClaims>
          <OutputClaims>
              <OutputClaim ClaimTypeReferenceId="actionCode" PartnerClaimType="action_code" />
              <OutputClaim ClaimTypeReferenceId="actionState" PartnerClaimType="action_state" />
              <OutputClaim ClaimTypeReferenceId="authsignalUserId" PartnerClaimType="sub" />
              <OutputClaim ClaimTypeReferenceId="authsignalEnrolled" PartnerClaimType="is_enrolled" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="AuthsignalCheckIsChallengeSuccessful" />
            <OutputClaimsTransformation ReferenceId="AuthsignalCheckMatchingUserId" />
          </OutputClaimsTransformations>
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-NotEnrolledError">
          <DisplayName>Not enrolled error</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted</Item>
            <Item Key="setting.showContinueButton">false</Item>
            <Item Key="setting.showCancelButton">false</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="errorMessage" DefaultValue="You must register an authentication method to continue."/>
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="errorMessage" Required="true"/>
          </OutputClaims>
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-AuthenticationError">
          <DisplayName>Authentication failed</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted</Item>
            <Item Key="setting.showContinueButton">false</Item>
            <Item Key="setting.showCancelButton">false</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="errorMessage" DefaultValue="Authentication challenge failed. Please try again."/>
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="errorMessage" Required="true"/>
          </OutputClaims>
        </TechnicalProfile>
      </TechnicalProfiles>

      <!-- AUTHSIGNAL TECHNICAL PROFILES END HERE -->
      
    </ClaimsProvider>
  </ClaimsProviders>

  <UserJourneys>
    <UserJourney Id="AuthsignalSignUpOrSignIn_Passwordless">
      <OrchestrationSteps>
        <OrchestrationStep Order="1" Type="CombinedSignInAndSignUp" ContentDefinitionReferenceId="api.signuporsignin">
          <ClaimsProviderSelections>
            <ClaimsProviderSelection ValidationClaimsExchangeId="LocalAccountSigninEmailExchange" />
          </ClaimsProviderSelections>
          <ClaimsExchanges>
            <ClaimsExchange Id="LocalAccountSigninEmailExchange" TechnicalProfileReferenceId="SelfAsserted-LocalAccountSignin-Email_Passwordless" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="2" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>objectId</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="SignUpWithLogonEmailExchange" TechnicalProfileReferenceId="LocalAccountSignUpWithLogonEmail_Passwordless" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- This step reads any user attributes that we may not have received when in the token. -->
        <OrchestrationStep Order="3" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="AADUserReadWithObjectId" TechnicalProfileReferenceId="AAD-UserReadUsingObjectId" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- AUTHSIGNAL USER JOURNEY STEPS START HERE -->
        <!-- NOTE: Change the Order attribute accordingly, adjusting other orchestration steps in your user journey as necessary -->

        <!-- A. Call Authsignal's OIDC init auth endpoint to generate a short lived token representing the user.
        This is a prerequisite before federating the flows to Authsignal via the OIDC Authorize technical profile in the step below  -->
        <OrchestrationStep Order="4" Type="ClaimsExchange">
            <ClaimsExchanges>
                <ClaimsExchange Id="AuthsignalOidcInitAuth" TechnicalProfileReferenceId="AuthsignalOidcInitAuth"/>
            </ClaimsExchanges>
        </OrchestrationStep>

        <!-- B. Feed the token returned by the init auth endpoint to Authsignal's OIDC authorize endpoint -->
        <OrchestrationStep Order="5" Type="ClaimsExchange">
            <ClaimsExchanges>
                <ClaimsExchange Id="AuthsignalOidcAuth" TechnicalProfileReferenceId="AuthsignalOidcAuth"/>
            </ClaimsExchanges>
        </OrchestrationStep>

        <!-- C. Defensively check that the id token sub (aka the Authsignal userId) matches the objectId we are currently processing -->
        <OrchestrationStep Order="6" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
              <Value>isMatchingUserId</Value>
              <Value>True</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="ShowUserIdMismatchErrorPage" TechnicalProfileReferenceId="SelfAsserted-AuthenticationError" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- D. Check that the authentication challenge has been successful -->
        <OrchestrationStep Order="7" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
              <Value>isChallengeSuccessful</Value>
              <Value>true</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="ShowChallengeFailedPage" TechnicalProfileReferenceId="SelfAsserted-AuthenticationError" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- E. Check that the user has enrolled an authenticator -->
        <OrchestrationStep Order="8" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
              <Value>authsignalEnrolled</Value>
              <Value>true</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="ShowUserAuthenticatorNotEnrolledErrorPage" TechnicalProfileReferenceId="SelfAsserted-NotEnrolledError" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- AUTHSIGNAL USER JOURNEY STEPS END HERE -->

        <OrchestrationStep Order="9" Type="SendClaims" CpimIssuerTechnicalProfileReferenceId="JwtIssuer" />

      </OrchestrationSteps>
      <ClientDefinition ReferenceId="DefaultWeb" />
    </UserJourney>
	</UserJourneys>

</TrustFrameworkPolicy>